"""update users

Revision ID: 7b90ed285194
Revises: 31a91ebf82a8
Create Date: 2025-08-09 06:04:33.167871

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "7b90ed285194"
down_revision: Union[str, Sequence[str], None] = "31a91ebf82a8"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users", sa.Column("full_name", sa.String(length=128), nullable=True)
    )
    op.add_column(
        "users", sa.Column("phone", sa.String(length=32), nullable=True)
    )
    # Создаём тип ENUM в PostgreSQL до добавления колонки
    user_role = sa.Enum(
        "customer", "manager", "admin", name="user_role", create_type=False
    )
    user_role.create(op.get_bind(), checkfirst=True)
    op.add_column("users", sa.Column("role", user_role, nullable=False))
    op.add_column(
        "users",
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("users", "updated_at")
    op.drop_column("users", "role")
    # Удаляем тип ENUM, если он больше не используется
    user_role = sa.Enum(
        "customer", "manager", "admin", name="user_role", create_type=False
    )
    user_role.drop(op.get_bind(), checkfirst=True)
    op.drop_column("users", "phone")
    op.drop_column("users", "full_name")
    # ### end Alembic commands ###

    # todo: для ENUM руками-алембик не удаляет
    op.execute("DROP TYPE IF EXISTS user_role CASCADE;")
