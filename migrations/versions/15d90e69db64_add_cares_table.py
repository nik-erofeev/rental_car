"""add cares table

Revision ID: 15d90e69db64
Revises:
Create Date: 2025-08-09 04:45:25.315920

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "15d90e69db64"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cars",
        sa.Column("vin", sa.String(length=64), nullable=False),
        sa.Column("make", sa.String(length=64), nullable=False),
        sa.Column("model", sa.String(length=128), nullable=False),
        sa.Column("year", sa.Integer(), nullable=False),
        sa.Column("mileage", sa.Integer(), nullable=False),
        sa.Column("price", sa.Numeric(precision=12, scale=2), nullable=False),
        sa.Column(
            "condition",
            sa.Enum("new", "used", name="car_condition", create_type=False),
            nullable=False,
        ),
        sa.Column("color", sa.String(length=64), nullable=False),
        sa.Column(
            "engine_type",
            sa.Enum(
                "gasoline",
                "diesel",
                "hybrid",
                "electric",
                name="engine_type",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "transmission",
            sa.Enum(
                "manual",
                "automatic",
                "cvt",
                name="transmission",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum(
                "available",
                "reserved",
                "sold",
                name="car_status",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_cars_vin"), "cars", ["vin"], unique=True)
    op.create_table(
        "users",
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_cars_vin"), table_name="cars")
    op.drop_table("cars")
    # ### end Alembic commands ###

    # todo: для ENUM руками-алембик не удаляет
    op.execute("DROP TYPE IF EXISTS car_condition CASCADE;")
    op.execute("DROP TYPE IF EXISTS engine_type CASCADE;")
    op.execute("DROP TYPE IF EXISTS transmission CASCADE;")
    op.execute("DROP TYPE IF EXISTS car_status CASCADE;")
